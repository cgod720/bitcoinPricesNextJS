{"ast":null,"code":"import _parseFloat from \"@babel/runtime-corejs2/core-js/parse-float\";\nimport _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/CarlosGodoy/nextJS/bitz/components/Prices.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nvar Prices =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Prices, _React$Component);\n\n  function Prices(props) {\n    var _this;\n\n    _classCallCheck(this, Prices);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Prices).call(this, props));\n    _this.state = {\n      currency: \"USD\"\n    };\n    return _this;\n  }\n\n  _createClass(Prices, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var list = \"\";\n\n      if (this.state.currency === \"USD\") {\n        list = __jsx(\"li\", {\n          className: \"list-group-item\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 12\n          },\n          __self: this\n        }, \"Bitcoin rate for \", this.props.bpi.bpi.USD.description, \":\", __jsx(\"span\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 14\n          },\n          __self: this\n        }, \"   \"), __jsx(\"span\", {\n          className: \"badge badge-success\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 15\n          },\n          __self: this\n        }, this.props.bpi.bpi.USD.code), __jsx(\"span\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 16\n          },\n          __self: this\n        }, \"  \"), __jsx(\"strong\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 17\n          },\n          __self: this\n        }, \"$\", _parseFloat(this.props.bpi.bpi.USD.rate_float).toFixed(2)));\n      } else if (this.state.currency === \"GBP\") {\n        list = __jsx(\"li\", {\n          className: \"list-group-item\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 20\n          },\n          __self: this\n        }, \"Bitcoin rate for \", this.props.bpi.bpi.GBP.description, \":\", __jsx(\"span\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 22\n          },\n          __self: this\n        }, \"   \"), __jsx(\"span\", {\n          className: \"badge badge-success\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 23\n          },\n          __self: this\n        }, this.props.bpi.bpi.GBP.code), __jsx(\"span\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 24\n          },\n          __self: this\n        }, \"  \"), __jsx(\"strong\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 25\n          },\n          __self: this\n        }, \"$\", _parseFloat(this.props.bpi.bpi.GBP.rate_float).toFixed(2)));\n      } else if (this.state.currency === \"EUR\") {\n        list = __jsx(\"li\", {\n          className: \"list-group-item\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 28\n          },\n          __self: this\n        }, \"Bitcoin rate for \", this.props.bpi.bpi.EUR.description, \":\", __jsx(\"span\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 30\n          },\n          __self: this\n        }, \"   \"), __jsx(\"span\", {\n          className: \"badge badge-success\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 31\n          },\n          __self: this\n        }, this.props.bpi.bpi.EUR.code), __jsx(\"span\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 32\n          },\n          __self: this\n        }, \"  \"), __jsx(\"strong\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 33\n          },\n          __self: this\n        }, \"$\", _parseFloat(this.props.bpi.bpi.EUR.rate_float).toFixed(2)));\n      }\n\n      return __jsx(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39\n        },\n        __self: this\n      }, __jsx(\"ul\", {\n        className: \"list-group\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40\n        },\n        __self: this\n      }, list), __jsx(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43\n        },\n        __self: this\n      }), __jsx(\"select\", {\n        onChange: function onChange(e) {\n          _this2.setState({\n            currency: e.target.value\n          });\n        },\n        className: \"form-control\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44\n        },\n        __self: this\n      }, __jsx(\"option\", {\n        value: \"USD\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45\n        },\n        __self: this\n      }, \"USD\"), __jsx(\"option\", {\n        value: \"GBP\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46\n        },\n        __self: this\n      }, \"GBP\"), __jsx(\"option\", {\n        value: \"EUR\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47\n        },\n        __self: this\n      }, \"EUR\")));\n    }\n  }]);\n\n  return Prices;\n}(React.Component);\n\nexport default Prices;","map":{"version":3,"sources":["/Users/CarlosGodoy/nextJS/bitz/components/Prices.js"],"names":["Prices","props","state","currency","list","bpi","USD","description","code","rate_float","toFixed","GBP","EUR","e","setState","target","value","React","Component"],"mappings":"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","sourcesContent":["class Prices extends React.Component {\n    constructor(props){\n        super(props)\n        this.state = {\n            currency: \"USD\"\n        }\n    }\n\n    render(){\n        let list = \"\"\n        if(this.state.currency === \"USD\"){\n            list = <li className=\"list-group-item\">\n                        Bitcoin rate for {this.props.bpi.bpi.USD.description}:\n                        <span>   </span>\n                        <span className=\"badge badge-success\">{this.props.bpi.bpi.USD.code}</span>\n                        <span>  </span>\n                        <strong>${parseFloat(this.props.bpi.bpi.USD.rate_float).toFixed(2)}</strong>\n                    </li>\n        } else if(this.state.currency === \"GBP\"){\n            list = <li className=\"list-group-item\">\n                        Bitcoin rate for {this.props.bpi.bpi.GBP.description}:\n                        <span>   </span>\n                        <span className=\"badge badge-success\">{this.props.bpi.bpi.GBP.code}</span>\n                        <span>  </span>\n                        <strong>${parseFloat(this.props.bpi.bpi.GBP.rate_float).toFixed(2)}</strong>\n                    </li>\n        } else if(this.state.currency === \"EUR\"){\n            list = <li className=\"list-group-item\">\n                        Bitcoin rate for {this.props.bpi.bpi.EUR.description}:\n                        <span>   </span>\n                        <span className=\"badge badge-success\">{this.props.bpi.bpi.EUR.code}</span>\n                        <span>  </span>\n                        <strong>${parseFloat(this.props.bpi.bpi.EUR.rate_float).toFixed(2)}</strong>\n                    </li>\n        }\n\n        return(\n\n            <div>\n                <ul className=\"list-group\">\n                    {list}\n                </ul>\n                <br/>\n                <select onChange={e => {this.setState({currency: e.target.value})}} className=\"form-control\">\n                    <option value=\"USD\">USD</option>\n                    <option value=\"GBP\">GBP</option>\n                    <option value=\"EUR\">EUR</option>\n                </select>\n            </div>\n        )\n    }\n}\n\nexport default Prices;"]},"metadata":{},"sourceType":"module"}