{"ast":null,"code":"import _parseFloat from \"@babel/runtime-corejs2/core-js/parse-float\";\nvar _jsxFileName = \"/Users/CarlosGodoy/nextJS/bitz/components/Prices.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nclass Prices extends React.Component {\n  constructor(props) {\n    super(props);\n  }\n\n  render() {\n    let list = \"USD\";\n\n    if (list === \"USD\") {\n      list = __jsx(\"li\", {\n        className: \"list-group-item\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 10\n        },\n        __self: this\n      }, \"Bitcoin rate for \", this.props.bpi.bpi.USD.description, \":\", __jsx(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 12\n        },\n        __self: this\n      }, \"   \"), __jsx(\"span\", {\n        className: \"badge badge-success\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 13\n        },\n        __self: this\n      }, this.props.bpi.bpi.USD.code), __jsx(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 14\n        },\n        __self: this\n      }, \"  \"), __jsx(\"strong\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 15\n        },\n        __self: this\n      }, \"$\", _parseFloat(this.props.bpi.bpi.USD.rate_float).toFixed(2)));\n    } else if (list === \"GBP\") {\n      list = __jsx(\"li\", {\n        className: \"list-group-item\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 18\n        },\n        __self: this\n      }, \"Bitcoin rate for \", this.props.bpi.bpi.GBP.description, \":\", __jsx(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 20\n        },\n        __self: this\n      }, \"   \"), __jsx(\"span\", {\n        className: \"badge badge-success\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 21\n        },\n        __self: this\n      }, this.props.bpi.bpi.GBP.code), __jsx(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 22\n        },\n        __self: this\n      }, \"  \"), __jsx(\"strong\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 23\n        },\n        __self: this\n      }, \"$\", _parseFloat(this.props.bpi.bpi.GBP.rate_float).toFixed(2)));\n    } else if (list === \"EUR\") {\n      list = __jsx(\"li\", {\n        className: \"list-group-item\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 26\n        },\n        __self: this\n      }, \"Bitcoin rate for \", this.props.bpi.bpi.EUR.description, \":\", __jsx(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 28\n        },\n        __self: this\n      }, \"   \"), __jsx(\"span\", {\n        className: \"badge badge-success\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 29\n        },\n        __self: this\n      }, this.props.bpi.bpi.EUR.code), __jsx(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 30\n        },\n        __self: this\n      }, \"  \"), __jsx(\"strong\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31\n        },\n        __self: this\n      }, \"$\", _parseFloat(this.props.bpi.bpi.EUR.rate_float).toFixed(2)));\n    }\n\n    return __jsx(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    }, __jsx(\"ul\", {\n      className: \"list-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    }, list));\n  }\n\n}\n\nexport default Prices;","map":{"version":3,"sources":["/Users/CarlosGodoy/nextJS/bitz/components/Prices.js"],"names":["Prices","React","Component","constructor","props","render","list","bpi","USD","description","code","rate_float","toFixed","GBP","EUR"],"mappings":";;;;;AAAA,MAAMA,MAAN,SAAqBC,KAAK,CAACC,SAA3B,CAAqC;AACjCC,EAAAA,WAAW,CAACC,KAAD,EAAO;AACd,UAAMA,KAAN;AACH;;AAEDC,EAAAA,MAAM,GAAE;AACJ,QAAIC,IAAI,GAAG,KAAX;;AAEA,QAAGA,IAAI,KAAK,KAAZ,EAAkB;AACdA,MAAAA,IAAI,GAAG;AAAI,QAAA,SAAS,EAAC,iBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BACuB,KAAKF,KAAL,CAAWG,GAAX,CAAeA,GAAf,CAAmBC,GAAnB,CAAuBC,WAD9C,OAEK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAFL,EAGK;AAAM,QAAA,SAAS,EAAC,qBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAuC,KAAKL,KAAL,CAAWG,GAAX,CAAeA,GAAf,CAAmBC,GAAnB,CAAuBE,IAA9D,CAHL,EAIK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAJL,EAKK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAU,YAAW,KAAKN,KAAL,CAAWG,GAAX,CAAeA,GAAf,CAAmBC,GAAnB,CAAuBG,UAAlC,EAA8CC,OAA9C,CAAsD,CAAtD,CAAV,CALL,CAAP;AAOH,KARD,MAQO,IAAGN,IAAI,KAAK,KAAZ,EAAkB;AACrBA,MAAAA,IAAI,GAAG;AAAI,QAAA,SAAS,EAAC,iBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BACuB,KAAKF,KAAL,CAAWG,GAAX,CAAeA,GAAf,CAAmBM,GAAnB,CAAuBJ,WAD9C,OAEK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAFL,EAGK;AAAM,QAAA,SAAS,EAAC,qBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAuC,KAAKL,KAAL,CAAWG,GAAX,CAAeA,GAAf,CAAmBM,GAAnB,CAAuBH,IAA9D,CAHL,EAIK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAJL,EAKK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAU,YAAW,KAAKN,KAAL,CAAWG,GAAX,CAAeA,GAAf,CAAmBM,GAAnB,CAAuBF,UAAlC,EAA8CC,OAA9C,CAAsD,CAAtD,CAAV,CALL,CAAP;AAOH,KARM,MAQA,IAAGN,IAAI,KAAK,KAAZ,EAAkB;AACrBA,MAAAA,IAAI,GAAG;AAAI,QAAA,SAAS,EAAC,iBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BACuB,KAAKF,KAAL,CAAWG,GAAX,CAAeA,GAAf,CAAmBO,GAAnB,CAAuBL,WAD9C,OAEK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAFL,EAGK;AAAM,QAAA,SAAS,EAAC,qBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAuC,KAAKL,KAAL,CAAWG,GAAX,CAAeA,GAAf,CAAmBO,GAAnB,CAAuBJ,IAA9D,CAHL,EAIK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAJL,EAKK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAU,YAAW,KAAKN,KAAL,CAAWG,GAAX,CAAeA,GAAf,CAAmBO,GAAnB,CAAuBH,UAAlC,EAA8CC,OAA9C,CAAsD,CAAtD,CAAV,CALL,CAAP;AAOH;;AAED,WAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAI,MAAA,SAAS,EAAC,YAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACKN,IADL,CADJ,CAFJ;AASH;;AA3CgC;;AA8CrC,eAAeN,MAAf","sourcesContent":["class Prices extends React.Component {\n    constructor(props){\n        super(props)\n    }\n\n    render(){\n        let list = \"USD\"\n\n        if(list === \"USD\"){\n            list = <li className=\"list-group-item\">\n                        Bitcoin rate for {this.props.bpi.bpi.USD.description}:\n                        <span>   </span>\n                        <span className=\"badge badge-success\">{this.props.bpi.bpi.USD.code}</span>\n                        <span>  </span>\n                        <strong>${parseFloat(this.props.bpi.bpi.USD.rate_float).toFixed(2)}</strong>\n                    </li>\n        } else if(list === \"GBP\"){\n            list = <li className=\"list-group-item\">\n                        Bitcoin rate for {this.props.bpi.bpi.GBP.description}:\n                        <span>   </span>\n                        <span className=\"badge badge-success\">{this.props.bpi.bpi.GBP.code}</span>\n                        <span>  </span>\n                        <strong>${parseFloat(this.props.bpi.bpi.GBP.rate_float).toFixed(2)}</strong>\n                    </li>\n        } else if(list === \"EUR\"){\n            list = <li className=\"list-group-item\">\n                        Bitcoin rate for {this.props.bpi.bpi.EUR.description}:\n                        <span>   </span>\n                        <span className=\"badge badge-success\">{this.props.bpi.bpi.EUR.code}</span>\n                        <span>  </span>\n                        <strong>${parseFloat(this.props.bpi.bpi.EUR.rate_float).toFixed(2)}</strong>\n                    </li>\n        }\n\n        return(\n\n            <div>\n                <ul className=\"list-group\">\n                    {list}\n\n                </ul>\n            </div>\n        )\n    }\n}\n\nexport default Prices;"]},"metadata":{},"sourceType":"module"}