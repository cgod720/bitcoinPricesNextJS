{"ast":null,"code":"import _parseFloat from \"@babel/runtime-corejs2/core-js/parse-float\";\nvar _jsxFileName = \"/Users/CarlosGodoy/nextJS/bitz/pages/index.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport Fetch from 'isomorphic-unfetch';\nimport Container from \"../components/Container\";\nimport Prices from \"../components/Prices\";\n\nconst Index = props => __jsx(Container, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 6\n  },\n  __self: this\n}, __jsx(\"div\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 7\n  },\n  __self: this\n}, __jsx(\"h1\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 8\n  },\n  __self: this\n}, \"Bitcoin: $\", props.twoDec), __jsx(\"h4\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 9\n  },\n  __self: this\n}, \"Current time: \", props.bpi.time.updated), __jsx(Prices, {\n  bpi: props.bpi,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 10\n  },\n  __self: this\n})));\n\nIndex.getInitialProps = async function () {\n  const res = await fetch('https://api.coindesk.com/v1/bpi/currentprice.json');\n  const data = await res.json();\n  let twoDec = data.bpi.USD.rate_float;\n\n  let thirdtime = _parseFloat(twoDec).toFixed(2);\n\n  return {\n    bpi: data,\n    twoDec: thirdtime\n  };\n};\n\nexport default Index;","map":{"version":3,"sources":["/Users/CarlosGodoy/nextJS/bitz/pages/index.js"],"names":["Fetch","Container","Prices","Index","props","twoDec","bpi","time","updated","getInitialProps","res","fetch","data","json","USD","rate_float","thirdtime","toFixed"],"mappings":";;;;AAAA,OAAOA,KAAP,MAAkB,oBAAlB;AACA,OAAOC,SAAP,MAAsB,yBAAtB;AACA,OAAOC,MAAP,MAAmB,sBAAnB;;AAEA,MAAMC,KAAK,GAAIC,KAAD,IACV,MAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAAeA,KAAK,CAACC,MAArB,CADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAAmBD,KAAK,CAACE,GAAN,CAAUC,IAAV,CAAeC,OAAlC,CAFJ,EAGI,MAAC,MAAD;AAAQ,EAAA,GAAG,EAAEJ,KAAK,CAACE,GAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAHJ,CADJ,CADJ;;AAWAH,KAAK,CAACM,eAAN,GAAwB,kBAAgB;AACpC,QAAMC,GAAG,GAAG,MAAMC,KAAK,CAAC,mDAAD,CAAvB;AACA,QAAMC,IAAI,GAAG,MAAMF,GAAG,CAACG,IAAJ,EAAnB;AACA,MAAIR,MAAM,GAAGO,IAAI,CAACN,GAAL,CAASQ,GAAT,CAAaC,UAA1B;;AACA,MAAIC,SAAS,GAAG,YAAWX,MAAX,EAAmBY,OAAnB,CAA2B,CAA3B,CAAhB;;AAEA,SAAO;AACHX,IAAAA,GAAG,EAAEM,IADF;AAEHP,IAAAA,MAAM,EAAEW;AAFL,GAAP;AAIH,CAVD;;AAYA,eAAeb,KAAf","sourcesContent":["import Fetch from 'isomorphic-unfetch'\nimport Container from \"../components/Container\"\nimport Prices from \"../components/Prices\"\n\nconst Index = (props) => (\n    <Container>\n        <div>\n            <h1>Bitcoin: ${props.twoDec}</h1>\n            <h4>Current time: {props.bpi.time.updated}</h4>\n            <Prices bpi={props.bpi}/>\n        </div>\n    </Container>\n)\n\n\nIndex.getInitialProps = async function(){\n    const res = await fetch('https://api.coindesk.com/v1/bpi/currentprice.json');\n    const data = await res.json()\n    let twoDec = data.bpi.USD.rate_float\n    let thirdtime = parseFloat(twoDec).toFixed(2)\n\n    return {\n        bpi: data,\n        twoDec: thirdtime\n    }\n}\n\nexport default Index;"]},"metadata":{},"sourceType":"module"}