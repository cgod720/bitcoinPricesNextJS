{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _parseFloat from \"@babel/runtime-corejs2/core-js/parse-float\";\nvar _jsxFileName = \"/Users/CarlosGodoy/nextJS/bitz/pages/index.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport Fetch from 'isomorphic-unfetch';\nimport Container from \"../components/Container\";\n\nvar Index = function Index(props) {\n  return __jsx(Container, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 5\n    },\n    __self: this\n  }, __jsx(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 6\n    },\n    __self: this\n  }, __jsx(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 7\n    },\n    __self: this\n  }, \"Bitcoin: $\", props.bpi.USD.twoDec)));\n};\n\nIndex.getInitialProps = function _callee() {\n  var res, data, twoDec, thirdtime;\n  return _regeneratorRuntime.async(function _callee$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.next = 2;\n          return _regeneratorRuntime.awrap(fetch('https://api.coindesk.com/v1/bpi/currentprice.json'));\n\n        case 2:\n          res = _context.sent;\n          _context.next = 5;\n          return _regeneratorRuntime.awrap(res.json());\n\n        case 5:\n          data = _context.sent;\n          twoDec = data.bpi.USD.rate_float;\n          thirdtime = _parseFloat(twoDec).toFixed(2);\n          return _context.abrupt(\"return\", {\n            bpi: data.bpi,\n            twoDec: thirdtime\n          });\n\n        case 9:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  });\n};\n\nexport default Index;","map":{"version":3,"sources":["/Users/CarlosGodoy/nextJS/bitz/pages/index.js"],"names":["Fetch","Container","Index","props","bpi","USD","twoDec","getInitialProps","fetch","res","json","data","rate_float","thirdtime","toFixed"],"mappings":";;;;;AAAA,OAAOA,KAAP,MAAkB,oBAAlB;AACA,OAAOC,SAAP,MAAsB,yBAAtB;;AAEA,IAAMC,KAAK,GAAG,SAARA,KAAQ,CAACC,KAAD;AAAA,SACV,MAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAAeA,KAAK,CAACC,GAAN,CAAUC,GAAV,CAAcC,MAA7B,CADJ,CADJ,CADU;AAAA,CAAd;;AAUAJ,KAAK,CAACK,eAAN,GAAwB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2CACFC,KAAK,CAAC,mDAAD,CADH;;AAAA;AACdC,UAAAA,GADc;AAAA;AAAA,2CAEDA,GAAG,CAACC,IAAJ,EAFC;;AAAA;AAEdC,UAAAA,IAFc;AAGhBL,UAAAA,MAHgB,GAGPK,IAAI,CAACP,GAAL,CAASC,GAAT,CAAaO,UAHN;AAIhBC,UAAAA,SAJgB,GAIJ,YAAWP,MAAX,EAAmBQ,OAAnB,CAA2B,CAA3B,CAJI;AAAA,2CAMb;AACHV,YAAAA,GAAG,EAAEO,IAAI,CAACP,GADP;AAEHE,YAAAA,MAAM,EAAEO;AAFL,WANa;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAxB;;AAYA,eAAeX,KAAf","sourcesContent":["import Fetch from 'isomorphic-unfetch'\nimport Container from \"../components/Container\"\n\nconst Index = (props) => (\n    <Container>\n        <div>\n            <h1>Bitcoin: ${props.bpi.USD.twoDec}</h1>\n            \n        </div>\n    </Container>\n)\n\n\nIndex.getInitialProps = async function(){\n    const res = await fetch('https://api.coindesk.com/v1/bpi/currentprice.json');\n    const data = await res.json()\n    let twoDec = data.bpi.USD.rate_float\n    let thirdtime = parseFloat(twoDec).toFixed(2)\n\n    return {\n        bpi: data.bpi,\n        twoDec: thirdtime\n    }\n}\n\nexport default Index;"]},"metadata":{},"sourceType":"module"}